{"version":3,"file":"word-tagging.cjs.js","sources":["../src/component/Tooltip/TooltipContainer.jsx","../src/component/Tooltip/DefaultToolTip.jsx","../src/component/TagEditor.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ToolTipContainer = styled.div`\r\nposition: absolute;\r\nz-index: 2;\r\ncursor: pointer;\r\nleft: ${props => props.x ? (props.x - 80)+\"px\" : \"50%\"};\r\ntop: ${props => props.y ? (props.y + 5)+\"px\" : \"10%\"};\r\n`;\r\n\r\nfunction TooltipContainer(props) {\r\n    return (\r\n        <ToolTipContainer x={props.x} y={props.y}>\r\n            {props.children}\r\n        </ToolTipContainer>\r\n    )\r\n}\r\n\r\nexport default TooltipContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DefaultToolTip = styled.div`\r\nmargin-bottom: 5px;\r\npadding: 7px;\r\nwidth: 160px;\r\n-webkit-border-radius: 3px;\r\n-moz-border-radius: 3px;\r\nborder-radius: 3px;\r\nbackground-color: #000;\r\nbackground-color: hsla(0, 0%, 20%, 0.9);\r\ncolor: #fff;\r\ncontent: attr(data-tooltip);\r\ntext-align: center;\r\nfont-size: 14px;\r\nline-height: 1.2;\r\n&: after{\r\n    position: absolute;\r\n  bottom: 100%;\r\n  left: 50%;\r\n  margin-left: -5px;\r\n  width: 0;\r\n  border-bottom: 5px solid #000;\r\n  border-bottom: 5px solid hsla(0, 0%, 20%, 0.9);\r\n  border-right: 5px solid transparent;\r\n  border-left: 5px solid transparent;\r\n  content: '\\u25b2';\r\n  font-size: 0;\r\n  line-height: 0;\r\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\r\n  filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=0);\r\n  pointer-events: none;\r\n}\r\n`;\r\n\r\nfunction DefaultTooltip(props) {\r\n    return (\r\n        <DefaultToolTip>\r\n            {props.children}\r\n        </DefaultToolTip>\r\n    )\r\n}\r\n\r\nexport default DefaultTooltip;","import React,{ useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TooltipContainer from './Tooltip/TooltipContainer.jsx';\r\nimport DefaultTooltip from './Tooltip/DefaultToolTip.jsx';\r\n\r\nfunction getRandomColor() {\r\n    return '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6);\r\n}\r\n\r\nconst Style = {\r\n    input: {\r\n        minHeight: \"100px\", \r\n        borderRadius: \"5px\", \r\n        border: \"1px solid #ccc\",\r\n        padding: \"5px\",\r\n        marginBottom: \"1px\"\r\n    },\r\n    textarea: {\r\n        display: \"none\"\r\n    }\r\n}\r\nfunction TagEditor(props) {\r\n    const taggedWordsMap = new Map();\r\n    const tagInputRef = useRef();\r\n    const [text, setText] = useState(props.value || \"\");\r\n    const [tags, setTags] = useState(props.tags || []);\r\n    const [showTooltip, setShowTooltip] = useState(false);\r\n    const [tooltipPosition, setTooltipPosition] = useState({\r\n        x: 0,\r\n        y: 0\r\n    });\r\n    const CustomTooltip = props.customTooltip;\r\n\r\n    useEffect(() => {\r\n        if (!props.value) {\r\n            console.warn(\"TagEditor: need default value\");\r\n        };\r\n        if (!props.tags) {\r\n            console.warn(\"TagEditor: You should give 'tags' value.\")\r\n        } else {\r\n            const tempTags = tags.map(tag => {\r\n                return {\r\n                    name: tag.name,\r\n                    color: tag.color ? tag.color : getRandomColor(),\r\n                    checked: false\r\n                }\r\n            });\r\n\r\n            setTags(tempTags);\r\n        }\r\n    }, []);\r\n\r\n    function setTagMap(tag, word, action) {\r\n        let words = taggedWordsMap.get(tag) || [];\r\n\r\n        if (action === 'ADD') {\r\n            words.push(word);\r\n        } else if (action === 'DELETE') {\r\n            words = words.filter(w => w !== word);\r\n        }\r\n\r\n        taggedWordsMap.set(tag, words);\r\n    }\r\n\r\n    function onChange(event) {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    function onSelectText(event) {\r\n        const clientRects = window.getSelection().getRangeAt(0).getClientRects()[0];\r\n\r\n        if (clientRects) {\r\n            setTooltipPosition({ x: (clientRects.left + clientRects.right) / 2, y: clientRects.bottom })\r\n\r\n            const parentNode = window.getSelection().getRangeAt(0).startContainer.parentNode;\r\n            const tagIndex = tags.findIndex(tag => tag.name === parentNode.id);\r\n            if (tagIndex > -1) {\r\n                const newTags = tags.map((tag, index) => index === tagIndex ? { ...tag, checked: true } : { ...tag, checked: false });\r\n                setTags(newTags);\r\n            } else {\r\n                const newTags = tags.map(tag => {\r\n                    tag.checked = false;\r\n                    return tag;\r\n                });\r\n\r\n                setTags(newTags);\r\n            }\r\n\r\n            const selectText = window.getSelection().toString();\r\n\r\n            if (selectText.length > 0) {\r\n                setShowTooltip(true);\r\n            } else {\r\n                setShowTooltip(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    function taggingWord(tag) {\r\n        const selection = window.getSelection();\r\n        const selectText = selection.toString();\r\n\r\n        const parentNode = selection.getRangeAt(0).startContainer.parentNode;\r\n        const taggedIndex = tags.findIndex(tag => tag.name === parentNode.id);\r\n        let replace;\r\n\r\n\r\n        if (taggedIndex > -1) {\r\n            replaceTaggedWord(parentNode);\r\n            setTagMap(tag.name, selectText, 'DELETE');\r\n        } else {\r\n            replace = document.createElement('span');\r\n            replace.textContent = selectText;\r\n            replace.setAttribute('id', tag.name);\r\n            replace.style.backgroundColor = tag.color;\r\n            replaceSelection(replace.outerHTML, true);\r\n            setTagMap(tag.name, selectText, 'ADD');\r\n        }\r\n        setShowTooltip(false);\r\n\r\n        if (props.onClickTag) {\r\n            props.onClickTag(selectText, tag.name, taggedIndex > -1 ? false : true);\r\n        }\r\n        if (props.onChange) {\r\n            const taggedInfo = {\r\n                word: selectText,\r\n                tag: {\r\n                    name: tag.name,\r\n                    color: tag.color\r\n                },\r\n                tagged: taggedIndex > -1 ? false : true,\r\n                startIndex: 0,\r\n                endIndex: 0,\r\n                html: tagInputRef.current.innerHTML\r\n            }\r\n            props.onChange(taggedInfo)\r\n        }\r\n    }\r\n\r\n    function replaceTaggedWord(taggedNode) {\r\n        const replaceText = document.createTextNode(taggedNode.innerHTML);\r\n        taggedNode.parentNode.replaceChild(replaceText, taggedNode);\r\n    }\r\n\r\n    function replaceSelection(html, selectInserted) {\r\n        let sel, range, fragment;\r\n        sel = window.getSelection();\r\n\r\n        if (sel.getRangeAt && sel.rangeCount) {\r\n            range = window.getSelection().getRangeAt(0);\r\n            range.deleteContents();\r\n\r\n            if (range.createContextualFragment) {\r\n                fragment = range.createContextualFragment(html);\r\n            } else {\r\n                let div = document.createElement(\"div\"), child;\r\n                div.innerHTML = html;\r\n                fragment = document.createDocumentFragment();\r\n                while ((child = div.firstChild)) {\r\n                    fragment.appendChild(child);\r\n                }\r\n            }\r\n            if (selectInserted) {\r\n                let firstInsertedNode = fragment.firstChild;\r\n                let lastInsertedNode = fragment.lastChild;\r\n                range.insertNode(fragment);\r\n\r\n                if (firstInsertedNode) {\r\n                    range.setStartBefore(firstInsertedNode);\r\n                    range.setEndAfter(lastInsertedNode);\r\n                }\r\n            } else {\r\n                const parentNode = range.startContainer.parentNode;\r\n                parentNode.parentNode.removeChild(parentNode);\r\n                range.insertNode(fragment);\r\n            }\r\n            sel.removeAllRanges();\r\n            sel.addRange(range);\r\n        }\r\n    }\r\n\r\n    function Tooltip(props) {\r\n        return CustomTooltip ? <CustomTooltip {...props}/> : <DefaultTooltip {...props}/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={props.formClassName || \"\"} onClick={onSelectText}>\r\n                <div className={props.divClassName || \"input\"} style={props.divClassName ? {} : Style.input}ref={tagInputRef} onChange={onChange} contentEditable suppressContentEditableWarning>\r\n                    {text}\r\n                </div>\r\n                <textarea className=\"wordtag-result\" style={Style.textarea}></textarea>\r\n            </form>\r\n            {\r\n                showTooltip &&\r\n                <TooltipContainer x={tooltipPosition.x} y={tooltipPosition.y}>\r\n                    <Tooltip>\r\n                        {\r\n                            tags.map((tag, index) =>\r\n                                <label key={tag.name + tag.color} htmlFor={tag.name} className={props.labelClassName || \"\"}>\r\n                                    <input id={tag.name + index} name={tag.name} type=\"checkbox\" className={props.inputClassName || \"\"} onChange={() => { taggingWord(tag) }} checked={tag.checked} />\r\n                                    {tag.name}\r\n                                </label>)\r\n                        }\r\n                    </Tooltip>\r\n                </TooltipContainer>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TagEditor;\r\n\r\nTagEditor.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    tags: PropTypes.array.isRequired,\r\n    formClassName: PropTypes.string,\r\n    divClassName: PropTypes.string,\r\n    labelClassName: PropTypes.string,\r\n    inputClassName: PropTypes.string,\r\n    customTooltip: PropTypes.elementType,\r\n    onChange: PropTypes.func,\r\n    onClickTag: PropTypes.func\r\n}"],"names":["ToolTipContainer","styled","div","props","x","y","TooltipContainer","React","children","DefaultToolTip","DefaultTooltip","getRandomColor","Math","random","toString","substr","Style","input","minHeight","borderRadius","border","padding","marginBottom","textarea","display","TagEditor","taggedWordsMap","Map","tagInputRef","useRef","useState","value","text","setText","tags","setTags","showTooltip","setShowTooltip","tooltipPosition","setTooltipPosition","CustomTooltip","customTooltip","useEffect","console","warn","tempTags","map","tag","name","color","checked","setTagMap","word","action","words","get","push","filter","w","set","onChange","event","target","onSelectText","clientRects","window","getSelection","getRangeAt","getClientRects","left","right","bottom","parentNode","startContainer","tagIndex","findIndex","id","newTags","index","selectText","length","taggingWord","selection","taggedIndex","replace","replaceTaggedWord","document","createElement","textContent","setAttribute","style","backgroundColor","replaceSelection","outerHTML","onClickTag","taggedInfo","tagged","startIndex","endIndex","html","current","innerHTML","taggedNode","replaceText","createTextNode","replaceChild","selectInserted","sel","range","fragment","rangeCount","deleteContents","createContextualFragment","child","createDocumentFragment","firstChild","appendChild","firstInsertedNode","lastInsertedNode","lastChild","insertNode","setStartBefore","setEndAfter","removeChild","removeAllRanges","addRange","Tooltip","formClassName","divClassName","labelClassName","inputClassName","propTypes","PropTypes","string","isRequired","array","elementType","func"],"mappings":"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"}